accuracy <- (loan[1,1]+loan[2,2])/sum(loan)*100
fprate <- loan[2,1]/(loan[2,1]+loan[1,1])*100
AUC <- (100+sensitivity-fprate)/2
performance <- data.frame(sensitivity,specificity,accuracy,AUC)
performance
knitr::opts_chunk$set(echo = TRUE)
library(readr)
data <- read.csv("credit_risk_dataset.csv")
library(DT)
renderDT(data,options=list(pageLength=10,scrollX='400px'),filter='top')
library(dplyr)
glimpse(data)
# Encode `loan_status` 0 == non default, 1 == default
data$loan_status <-  ifelse(data$loan_status == 0,"non default","default")
# Transform categorical data
library(dplyr)
data <- data %>%
mutate_at(vars(person_home_ownership,loan_intent,loan_grade,loan_status,cb_person_default_on_file),as.factor)
glimpse(data)
colSums(is.na(data))
#`person_emp_length`, NaN values are replaced with the most frequent value (mode)
data$person_emp_length[is.na(data$person_emp_length)] <- as.numeric(names(which.max(table(data$person_emp_length))))
#`loan_int_rate`, NaN values are replaced with the the median of the column values
data$loan_int_rate[is.na(data$loan_int_rate)] <- median(data$loan_int_rate,na.rm=TRUE)
# Check missing values are replaced
colSums(is.na(data))
library(ggplot2)
library(ggpubr)
library(patchwork)
fig_1 <- ggplot(data,aes(x=person_age)) +
geom_histogram(aes(y=after_stat(density)),color="skyblue",fill="skyblue") + geom_density(alpha=0.2) + ggtitle("Figure 1: The density of age person")
fig_1
fig_2 <- ggplot(data,aes(x=person_income)) +
geom_histogram(aes(y=after_stat(density)),color="skyblue",fill="skyblue") +
geom_density(alpha=0.2,fill="skyblue") + ggtitle("Figure 2: The density of annual income person")
fig_2
fig_3 <- ggplot(data,aes(x=person_emp_length)) +
geom_histogram(aes(y=after_stat(density)),color="skyblue",fill="skyblue") +
geom_density(alpha=0.2,fill="skyblue") + ggtitle("Figure 3: The density of employment length")
fig_3
# Outliers will be removed
person_age_out <- which(data$person_age > 100)
person_income_out <- which(data$person_income > 4000000)
emp_length_out <- which(data$person_emp_length > 60)
data_cr <- data[-c(person_age_out,person_income_out,emp_length_out),]
library(ggcorrplot)
model.matrix(~0+., data=data_cr) %>%
cor(use="pairwise.complete.obs") %>%
ggcorrplot(show.diag = FALSE, type="lower",tl.cex=5, lab=TRUE,
lab_size=1.5) + ggtitle("Figure 4: Correlation between variables")
fig_loan <- ggplot(data_cr,aes(x=loan_status, fill=loan_status)) + geom_bar() +
geom_text(stat = "count", aes(label = after_stat(count)),
colour = "white", size = 3.5, position=position_stack(vjust=0.5)) +
ggtitle("Figure 5: Loan Status")
fig_loan
# Relation between person_home_ownership with loan status
fig_ph <- ggplot(data_cr,aes(x=person_home_ownership, fill=loan_status)) + geom_bar() +
geom_text(stat = "count", aes(label = after_stat(count)),
colour = "white", size = 2.5, position=position_stack(vjust=0.5)) +
ggtitle("Figure 6 : Person home ownership by loan status")
# Relation between loan grade with loan status
fig_grade <- ggplot(data_cr,aes(x=loan_grade, fill=loan_status)) + geom_bar() +
geom_text(stat = "count", aes(label = after_stat(count)),
colour = "white", size = 2.5, position=position_stack(vjust=0.5)) +
ggtitle("Figure 7: Loan grade by loan status")
fig_mix_1 <- fig_ph / fig_grade
fig_mix_1
# Relation between loan intent with loan status
fig_int <- ggplot(data_cr,aes(x=loan_intent, fill=loan_status)) + geom_bar() +
geom_text(stat = "count", aes(label = after_stat(count)),
colour = "white", size = 2.5, position=position_stack(vjust=0.5)) +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Figure 8: Loan intent by loan status")
fig_int
# Relation between interest rate with loan status
fig_ir <- ggplot(data_cr,aes(x=loan_status, y=loan_int_rate, fill=loan_status)) + geom_boxplot() +
ggtitle("Figure 9: Interest rate by loan status") + coord_flip()
# Relation between loan amount with loan status
fig_am <- ggplot(data_cr,aes(x=loan_status, y=loan_amnt, fill=loan_status)) + geom_boxplot() +
ggtitle("Figure 10: Loan amount by loan status") + coord_flip()
fig_mix_2 <- fig_ir / fig_am
fig_mix_2
library(dplyr)
set.seed(123)
split <- sample(nrow(data_cr),size=nrow(data_cr)*0.8)
train <- data_cr[split,]
head(train)
test <- data_cr[-split,]
renderDT(test,options=list(pageLength=10,scrollX='400px'),filter='top')
model_loan <- glm(formula = loan_status  ~ . ,family="binomial", data = train)
summary(model_loan)
library(pscl)
pR2(model_loan,c("McFadden"))
cat('chi square value:',qchisq(0.95,11))
summary(model_loan)
#Rebuilding model using significant predictor variables to loan status
model_loan_final <- glm(formula = loan_status ~  person_income + person_home_ownership + person_emp_length + loan_intent + loan_grade +
loan_amnt + loan_int_rate + loan_percent_income,
family="binomial", data = train)
summary(model_loan_final)
# Simultaneous Parameter Significance Test
library(pscl)
pR2(model_loan_final,c("McFadden"))
cat('chi-square value:',qchisq(0.95,8))
# VIF values
library(car)
vif(model_loan_final)
# Partial Parameter Significance Test
summary(model_loan_final)
library(generalhoslem)
loan_model<- model.frame(model_loan_final)
logitgof(loan_model$loan_status, fitted(model_loan_final))
coef_loan <- coef(model_loan_final)
odd_model_loan <- cbind(coef_loan, OR = exp(coef_loan), SK= exp(confint(model_loan_final)))
odd_model_loan
prob_loan <- predict(model_loan_final, type= "response", newdata = test)
pred_loan <- ifelse(prob_loan > 0.5, "non default", "default")
test_loan <- data.frame(pred_loan,test$loan_status)
head(test_loan)
loan <- table(pred_values = pred_loan, actual_values = test$loan_status)
loan
#number of true positives/(number of true positives + number of false negatives)
sensitivity <- loan[2,2]/sum(loan[2,])*100
#number of true negatives/(number of true negatives + number of false positives)
specificity <- loan[1,1]/sum(loan[1,])*100
#number of true negatives + number of true positives/ (number of true positives + number of false positives + number of true negatives + number of false negatives)
accuracy <- (loan[1,1]+loan[2,2])/sum(loan)*100
fprate <- loan[2,1]/(loan[2,1]+loan[1,1])*100
AUC <- (100+sensitivity-fprate)/2
performance <- data.frame(sensitivity,specificity,accuracy,AUC)
performance
install.packages("shiny")
knitr::opts_chunk$set(echo = TRUE)
coef_loan <- coef(model_loan_final)
odd_model_loan <- cbind(coef_loan, OR = exp(coef_loan), SK= exp(confint(model_loan_final)))
odd_model_loan
knitr::opts_chunk$set(echo = TRUE)
library(readr)
data <- read.csv("credit_risk_dataset.csv")
library(DT)
renderDT(data,options=list(pageLength=10,scrollX='400px'),filter='top')
library(dplyr)
glimpse(data)
# Encode `loan_status` 0 == non default, 1 == default
data$loan_status <-  ifelse(data$loan_status == 0,"non default","default")
# Transform categorical data
library(dplyr)
data <- data %>%
mutate_at(vars(person_home_ownership,loan_intent,loan_grade,loan_status,cb_person_default_on_file),as.factor)
glimpse(data)
colSums(is.na(data))
#`person_emp_length`, NaN values are replaced with the most frequent value (mode)
data$person_emp_length[is.na(data$person_emp_length)] <- as.numeric(names(which.max(table(data$person_emp_length))))
#`loan_int_rate`, NaN values are replaced with the the median of the column values
data$loan_int_rate[is.na(data$loan_int_rate)] <- median(data$loan_int_rate,na.rm=TRUE)
# Check missing values are replaced
colSums(is.na(data))
library(ggplot2)
library(ggpubr)
library(patchwork)
fig_1 <- ggplot(data,aes(x=person_age)) +
geom_histogram(aes(y=after_stat(density)),color="skyblue",fill="skyblue") + geom_density(alpha=0.2) + ggtitle("Figure 1: The density of age person")
fig_1
fig_2 <- ggplot(data,aes(x=person_income)) +
geom_histogram(aes(y=after_stat(density)),color="skyblue",fill="skyblue") +
geom_density(alpha=0.2,fill="skyblue") + ggtitle("Figure 2: The density of annual income person")
fig_2
fig_3 <- ggplot(data,aes(x=person_emp_length)) +
geom_histogram(aes(y=after_stat(density)),color="skyblue",fill="skyblue") +
geom_density(alpha=0.2,fill="skyblue") + ggtitle("Figure 3: The density of employment length")
fig_3
# Outliers will be removed
person_age_out <- which(data$person_age > 100)
person_income_out <- which(data$person_income > 4000000)
emp_length_out <- which(data$person_emp_length > 60)
data_cr <- data[-c(person_age_out,person_income_out,emp_length_out),]
library(ggcorrplot)
model.matrix(~0+., data=data_cr) %>%
cor(use="pairwise.complete.obs") %>%
ggcorrplot(show.diag = FALSE, type="lower",tl.cex=5, lab=TRUE,
lab_size=1.5) + ggtitle("Figure 4: Correlation between variables")
fig_loan <- ggplot(data_cr,aes(x=loan_status, fill=loan_status)) + geom_bar() +
geom_text(stat = "count", aes(label = after_stat(count)),
colour = "white", size = 3.5, position=position_stack(vjust=0.5)) +
ggtitle("Figure 5: Loan Status")
fig_loan
# Relation between person_home_ownership with loan status
fig_ph <- ggplot(data_cr,aes(x=person_home_ownership, fill=loan_status)) + geom_bar() +
geom_text(stat = "count", aes(label = after_stat(count)),
colour = "white", size = 2.5, position=position_stack(vjust=0.5)) +
ggtitle("Figure 6 : Person home ownership by loan status")
# Relation between loan grade with loan status
fig_grade <- ggplot(data_cr,aes(x=loan_grade, fill=loan_status)) + geom_bar() +
geom_text(stat = "count", aes(label = after_stat(count)),
colour = "white", size = 2.5, position=position_stack(vjust=0.5)) +
ggtitle("Figure 7: Loan grade by loan status")
fig_mix_1 <- fig_ph / fig_grade
fig_mix_1
# Relation between loan intent with loan status
fig_int <- ggplot(data_cr,aes(x=loan_intent, fill=loan_status)) + geom_bar() +
geom_text(stat = "count", aes(label = after_stat(count)),
colour = "white", size = 2.5, position=position_stack(vjust=0.5)) +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Figure 8: Loan intent by loan status")
fig_int
# Relation between interest rate with loan status
fig_ir <- ggplot(data_cr,aes(x=loan_status, y=loan_int_rate, fill=loan_status)) + geom_boxplot() +
ggtitle("Figure 9: Interest rate by loan status") + coord_flip()
# Relation between loan amount with loan status
fig_am <- ggplot(data_cr,aes(x=loan_status, y=loan_amnt, fill=loan_status)) + geom_boxplot() +
ggtitle("Figure 10: Loan amount by loan status") + coord_flip()
fig_mix_2 <- fig_ir / fig_am
fig_mix_2
library(dplyr)
set.seed(123)
split <- sample(nrow(data_cr),size=nrow(data_cr)*0.8)
train <- data_cr[split,]
head(train)
test <- data_cr[-split,]
renderDT(test,options=list(pageLength=10,scrollX='400px'),filter='top')
model_loan <- glm(formula = loan_status  ~ . ,family="binomial", data = train)
summary(model_loan)
library(pscl)
pR2(model_loan,c("McFadden"))
cat('chi square value:',qchisq(0.95,11))
summary(model_loan)
#Rebuilding model using significant predictor variables to loan status
model_loan_final <- glm(formula = loan_status ~  person_income + person_home_ownership + person_emp_length + loan_intent + loan_grade +
loan_amnt + loan_int_rate + loan_percent_income,
family="binomial", data = train)
summary(model_loan_final)
# Simultaneous Parameter Significance Test
library(pscl)
pR2(model_loan_final,c("McFadden"))
cat('chi-square value:',qchisq(0.95,8))
# VIF values
library(car)
vif(model_loan_final)
# Partial Parameter Significance Test
summary(model_loan_final)
library(generalhoslem)
loan_model<- model.frame(model_loan_final)
logitgof(loan_model$loan_status, fitted(model_loan_final))
coef_loan <- coef(model_loan_final)
odd_model_loan <- cbind(coef_loan, OR = exp(coef_loan), SK= exp(confint(model_loan_final)))
odd_model_loan
prob_loan <- predict(model_loan_final, type= "response", newdata = test)
pred_loan <- ifelse(prob_loan > 0.5, "non default", "default")
test_loan <- data.frame(pred_loan,test$loan_status)
head(test_loan)
loan <- table(pred_values = pred_loan, actual_values = test$loan_status)
loan
#number of true positives/(number of true positives + number of false negatives)
sensitivity <- loan[2,2]/sum(loan[2,])*100
#number of true negatives/(number of true negatives + number of false positives)
specificity <- loan[1,1]/sum(loan[1,])*100
#number of true negatives + number of true positives/ (number of true positives + number of false positives + number of true negatives + number of false negatives)
accuracy <- (loan[1,1]+loan[2,2])/sum(loan)*100
fprate <- loan[2,1]/(loan[2,1]+loan[1,1])*100
AUC <- (100+sensitivity-fprate)/2
performance <- data.frame(sensitivity,specificity,accuracy,AUC)
performance
knitr::opts_chunk$set(echo = TRUE)
library(readr)
data <- read.csv("credit_risk_dataset.csv")
library(DT)
renderDT(data,options=list(pageLength=10,scrollX='400px'),filter='top')
library(dplyr)
glimpse(data)
# Encode `loan_status` 0 == non default, 1 == default
data$loan_status <-  ifelse(data$loan_status == 0,"non default","default")
# Transform categorical data
library(dplyr)
data <- data %>%
mutate_at(vars(person_home_ownership,loan_intent,loan_grade,loan_status,cb_person_default_on_file),as.factor)
glimpse(data)
colSums(is.na(data))
#`person_emp_length`, NaN values are replaced with the most frequent value (mode)
data$person_emp_length[is.na(data$person_emp_length)] <- as.numeric(names(which.max(table(data$person_emp_length))))
#`loan_int_rate`, NaN values are replaced with the the median of the column values
data$loan_int_rate[is.na(data$loan_int_rate)] <- median(data$loan_int_rate,na.rm=TRUE)
# Check missing values are replaced
colSums(is.na(data))
library(ggplot2)
library(ggpubr)
library(patchwork)
fig_1 <- ggplot(data,aes(x=person_age)) +
geom_histogram(aes(y=after_stat(density)),color="skyblue",fill="skyblue") + geom_density(alpha=0.2) + ggtitle("Figure 1: The density of age person")
fig_1
fig_2 <- ggplot(data,aes(x=person_income)) +
geom_histogram(aes(y=after_stat(density)),color="skyblue",fill="skyblue") +
geom_density(alpha=0.2,fill="skyblue") + ggtitle("Figure 2: The density of annual income person")
fig_2
fig_3 <- ggplot(data,aes(x=person_emp_length)) +
geom_histogram(aes(y=after_stat(density)),color="skyblue",fill="skyblue") +
geom_density(alpha=0.2,fill="skyblue") + ggtitle("Figure 3: The density of employment length")
fig_3
# Outliers will be removed
person_age_out <- which(data$person_age > 100)
person_income_out <- which(data$person_income > 4000000)
emp_length_out <- which(data$person_emp_length > 60)
data_cr <- data[-c(person_age_out,person_income_out,emp_length_out),]
library(ggcorrplot)
model.matrix(~0+., data=data_cr) %>%
cor(use="pairwise.complete.obs") %>%
ggcorrplot(show.diag = FALSE, type="lower",tl.cex=5, lab=TRUE,
lab_size=1.5) + ggtitle("Figure 4: Correlation between variables")
fig_loan <- ggplot(data_cr,aes(x=loan_status, fill=loan_status)) + geom_bar() +
geom_text(stat = "count", aes(label = after_stat(count)),
colour = "white", size = 3.5, position=position_stack(vjust=0.5)) +
ggtitle("Figure 5: Loan Status")
fig_loan
# Relation between person_home_ownership with loan status
fig_ph <- ggplot(data_cr,aes(x=person_home_ownership, fill=loan_status)) + geom_bar() +
geom_text(stat = "count", aes(label = after_stat(count)),
colour = "white", size = 2.5, position=position_stack(vjust=0.5)) +
ggtitle("Figure 6 : Person home ownership by loan status")
# Relation between loan grade with loan status
fig_grade <- ggplot(data_cr,aes(x=loan_grade, fill=loan_status)) + geom_bar() +
geom_text(stat = "count", aes(label = after_stat(count)),
colour = "white", size = 2.5, position=position_stack(vjust=0.5)) +
ggtitle("Figure 7: Loan grade by loan status")
fig_mix_1 <- fig_ph / fig_grade
fig_mix_1
# Relation between loan intent with loan status
fig_int <- ggplot(data_cr,aes(x=loan_intent, fill=loan_status)) + geom_bar() +
geom_text(stat = "count", aes(label = after_stat(count)),
colour = "white", size = 2.5, position=position_stack(vjust=0.5)) +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Figure 8: Loan intent by loan status")
fig_int
# Relation between interest rate with loan status
fig_ir <- ggplot(data_cr,aes(x=loan_status, y=loan_int_rate, fill=loan_status)) + geom_boxplot() +
ggtitle("Figure 9: Interest rate by loan status") + coord_flip()
# Relation between loan amount with loan status
fig_am <- ggplot(data_cr,aes(x=loan_status, y=loan_amnt, fill=loan_status)) + geom_boxplot() +
ggtitle("Figure 10: Loan amount by loan status") + coord_flip()
fig_mix_2 <- fig_ir / fig_am
fig_mix_2
library(dplyr)
set.seed(123)
split <- sample(nrow(data_cr),size=nrow(data_cr)*0.8)
train <- data_cr[split,]
head(train)
test <- data_cr[-split,]
renderDT(test,options=list(pageLength=10,scrollX='400px'),filter='top')
model_loan <- glm(formula = loan_status  ~ . ,family="binomial", data = train)
summary(model_loan)
library(pscl)
pR2(model_loan,c("McFadden"))
cat('chi square value:',qchisq(0.95,11))
summary(model_loan)
#Rebuilding model using significant predictor variables to loan status
model_loan_final <- glm(formula = loan_status ~  person_income + person_home_ownership + person_emp_length + loan_intent + loan_grade +
loan_amnt + loan_int_rate + loan_percent_income,
family="binomial", data = train)
summary(model_loan_final)
# Simultaneous Parameter Significance Test
library(pscl)
pR2(model_loan_final,c("McFadden"))
cat('chi-square value:',qchisq(0.95,8))
# VIF values
library(car)
vif(model_loan_final)
# Partial Parameter Significance Test
summary(model_loan_final)
coef_loan <- coef(model_loan_final)
odd_model_loan <- cbind(coef_loan, OR = exp(coef_loan), SK= exp(confint(model_loan_final)))
odd_model_loan
prob_loan <- predict(model_loan_final, type= "response", newdata = test)
pred_loan <- ifelse(prob_loan > 0.5, "non default", "default")
test_loan <- data.frame(pred_loan,test$loan_status)
head(test_loan)
loan <- table(pred_values = pred_loan, actual_values = test$loan_status)
loan
#number of true positives/(number of true positives + number of false negatives)
sensitivity <- loan[2,2]/sum(loan[2,])*100
#number of true negatives/(number of true negatives + number of false positives)
specificity <- loan[1,1]/sum(loan[1,])*100
#number of true negatives + number of true positives/ (number of true positives + number of false positives + number of true negatives + number of false negatives)
accuracy <- (loan[1,1]+loan[2,2])/sum(loan)*100
fprate <- loan[2,1]/(loan[2,1]+loan[1,1])*100
AUC <- (100+sensitivity-fprate)/2
performance <- data.frame(sensitivity,specificity,accuracy,AUC)
performance
library(readr)
credit_risk_dataset <- read_csv("credit_risk_dataset.csv")
View(credit_risk_dataset)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
data <- read.csv("credit_risk_dataset.csv")
library(DT)
renderDT(data,options=list(pageLength=10,scrollX='400px'),filter='top')
library(dplyr)
glimpse(data)
# Encode `loan_status` 0 == non default, 1 == default
data$loan_status <-  ifelse(data$loan_status == 0,"non default","default")
# Transform categorical data
library(dplyr)
data <- data %>%
mutate_at(vars(person_home_ownership,loan_intent,loan_grade,loan_status,cb_person_default_on_file),as.factor)
glimpse(data)
colSums(is.na(data))
#`person_emp_length`, NaN values are replaced with the most frequent value (mode)
data$person_emp_length[is.na(data$person_emp_length)] <- as.numeric(names(which.max(table(data$person_emp_length))))
#`loan_int_rate`, NaN values are replaced with the the median of the column values
data$loan_int_rate[is.na(data$loan_int_rate)] <- median(data$loan_int_rate,na.rm=TRUE)
# Check missing values are replaced
colSums(is.na(data))
library(ggplot2)
library(ggpubr)
library(patchwork)
fig_1 <- ggplot(data,aes(x=person_age)) +
geom_histogram(aes(y=after_stat(density)),color="skyblue",fill="skyblue") + geom_density(alpha=0.2) + ggtitle("Figure 1: The density of age person")
fig_1
fig_2 <- ggplot(data,aes(x=person_income)) +
geom_histogram(aes(y=after_stat(density)),color="skyblue",fill="skyblue") +
geom_density(alpha=0.2,fill="skyblue") + ggtitle("Figure 2: The density of annual income person")
fig_2
fig_3 <- ggplot(data,aes(x=person_emp_length)) +
geom_histogram(aes(y=after_stat(density)),color="skyblue",fill="skyblue") +
geom_density(alpha=0.2,fill="skyblue") + ggtitle("Figure 3: The density of employment length")
fig_3
# Outliers will be removed
person_age_out <- which(data$person_age > 100)
person_income_out <- which(data$person_income > 4000000)
emp_length_out <- which(data$person_emp_length > 60)
data_cr <- data[-c(person_age_out,person_income_out,emp_length_out),]
library(ggcorrplot)
model.matrix(~0+., data=data_cr) %>%
cor(use="pairwise.complete.obs") %>%
ggcorrplot(show.diag = FALSE, type="lower",tl.cex=5, lab=TRUE,
lab_size=1.5) + ggtitle("Figure 4: Correlation between variables")
fig_loan <- ggplot(data_cr,aes(x=loan_status, fill=loan_status)) + geom_bar() +
geom_text(stat = "count", aes(label = after_stat(count)),
colour = "white", size = 3.5, position=position_stack(vjust=0.5)) +
ggtitle("Figure 5: Loan Status")
fig_loan
# Relation between person_home_ownership with loan status
fig_ph <- ggplot(data_cr,aes(x=person_home_ownership, fill=loan_status)) + geom_bar() +
geom_text(stat = "count", aes(label = after_stat(count)),
colour = "white", size = 2.5, position=position_stack(vjust=0.5)) +
ggtitle("Figure 6 : Person home ownership by loan status")
# Relation between loan grade with loan status
fig_grade <- ggplot(data_cr,aes(x=loan_grade, fill=loan_status)) + geom_bar() +
geom_text(stat = "count", aes(label = after_stat(count)),
colour = "white", size = 2.5, position=position_stack(vjust=0.5)) +
ggtitle("Figure 7: Loan grade by loan status")
fig_mix_1 <- fig_ph / fig_grade
fig_mix_1
# Relation between loan intent with loan status
fig_int <- ggplot(data_cr,aes(x=loan_intent, fill=loan_status)) + geom_bar() +
geom_text(stat = "count", aes(label = after_stat(count)),
colour = "white", size = 2.5, position=position_stack(vjust=0.5)) +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Figure 8: Loan intent by loan status")
fig_int
# Relation between interest rate with loan status
fig_ir <- ggplot(data_cr,aes(x=loan_status, y=loan_int_rate, fill=loan_status)) + geom_boxplot() +
ggtitle("Figure 9: Interest rate by loan status") + coord_flip()
# Relation between loan amount with loan status
fig_am <- ggplot(data_cr,aes(x=loan_status, y=loan_amnt, fill=loan_status)) + geom_boxplot() +
ggtitle("Figure 10: Loan amount by loan status") + coord_flip()
fig_mix_2 <- fig_ir / fig_am
fig_mix_2
library(dplyr)
set.seed(123)
split <- sample(nrow(data_cr),size=nrow(data_cr)*0.8)
train <- data_cr[split,]
head(train)
test <- data_cr[-split,]
renderDT(test,options=list(pageLength=10,scrollX='400px'),filter='top')
model_loan <- glm(formula = loan_status  ~ . ,family="binomial", data = train)
summary(model_loan)
library(pscl)
pR2(model_loan,c("McFadden"))
cat('chi square value:',qchisq(0.95,11))
summary(model_loan)
#Rebuilding model using significant predictor variables to loan status
model_loan_final <- glm(formula = loan_status ~  person_income + person_home_ownership + person_emp_length + loan_intent + loan_grade +
loan_amnt + loan_int_rate + loan_percent_income,
family="binomial", data = train)
summary(model_loan_final)
# Simultaneous Parameter Significance Test
library(pscl)
pR2(model_loan_final,c("McFadden"))
cat('chi-square value:',qchisq(0.95,8))
# VIF values
library(car)
vif(model_loan_final)
# Partial Parameter Significance Test
summary(model_loan_final)
coef_loan <- coef(model_loan_final)
odd_model_loan <- cbind(coef_loan, OR = exp(coef_loan), SK= exp(confint(model_loan_final)))
odd_model_loan
prob_loan <- predict(model_loan_final, type= "response", newdata = test)
pred_loan <- ifelse(prob_loan > 0.5, "non default", "default")
test_loan <- data.frame(pred_loan,test$loan_status)
head(test_loan)
loan <- table(pred_values = pred_loan, actual_values = test$loan_status)
loan
#number of true positives/(number of true positives + number of false negatives)
sensitivity <- loan[2,2]/sum(loan[2,])*100
#number of true negatives/(number of true negatives + number of false positives)
specificity <- loan[1,1]/sum(loan[1,])*100
#number of true negatives + number of true positives/ (number of true positives + number of false positives + number of true negatives + number of false negatives)
accuracy <- (loan[1,1]+loan[2,2])/sum(loan)*100
fprate <- loan[2,1]/(loan[2,1]+loan[1,1])*100
AUC <- (100+sensitivity-fprate)/2
performance <- data.frame(sensitivity,specificity,accuracy,AUC)
performance
git pull https://github.com/pramelfaa/credit-risk
